/**
 * @author Nicole Dahlquist & Peter Thomson
 * June 4, 2016
 * PROG3060 - NDPTAssn1
 * LoginServlet.java
 * Servlet for handling log in requests to derby database
 */
package presentation;

import java.io.IOException;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Properties;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.cfg.Configuration;

@WebServlet("/LoginServlet")
/*
 * Servlet for handling log in requests to derby database
 */
public class LoginServlet extends DerbyServlet {
		
	private static final long serialVersionUID = 1L;
	
	/**
	 * LoginServlet doPost method,
	 * Retrieves credentials from form and authenticates/establishes a connection to derby database
	 */
	@Override
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		//Initialize local variables
		String url = "/Login.jsp?error=true";
		Session dbSession = null;
		
		//Verify username and password, attempt to get derby connection if valid credentials
		try {
			if(userName.equals(USER) && password.equals(PASSWORD)){
				Configuration config = new Configuration()
					.addResource("persistence.xml")
					.setProperty("hibernate.dialect", "org.hibernate.dialect.DerbyDialect");
				config.configure();
				StandardServiceRegistryBuilder srb = new StandardServiceRegistryBuilder();
				srb.applySettings(config.getProperties());
				StandardServiceRegistry sr = srb.build();
				SessionFactory sessionFactory = config.buildSessionFactory(sr);
				dbSession.equals(sessionFactory.openSession());
			}
		} 
		
		catch (Exception e) {
			e.printStackTrace();
		}
		
		//Store dbSession in session variable if it exists
		if(dbSession != null){		
			HttpSession session = request.getSession();
			session.setAttribute("dbSession", dbSession);			
			url = "/Team";
		}
		
		//Redirect to login page if invalid credentials, otherwise redirect to team page
		response.sendRedirect(response.encodeRedirectURL(request.getContextPath() + url));
	}
}
