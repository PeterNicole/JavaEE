/**
 * @author Nicole Dahlquist & Peter Thomson
 * July 22, 2016
 * PROG3060 - NDPTAssn2
 * UpdateGameServlet.java
 * UpdateGameServlet for updating a game's score on the UpdateGame.jsp
 */
package presentation;

import java.io.IOException;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import persistence.Game;
import persistence.LeagueDAO;

/** 
 * @author Nicole Dahlquist & Peter Thomson
 * UpdateGameServlet for updating a game's score on the UpdateGame.jsp
 */
@WebServlet("/UpdateGame")
public class UpdateGameServlet extends DerbyServlet {
	private static final long serialVersionUID = 1L;
       
	/**
	 * doGet method for UpdateGameServlet
	 * Displays a form with the game details and fields to input scores and OT status
	 * @param request
	 * @param response
	 * @throws ServletException
	 * @throws IOException
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//Initialize local variables
		String url = "/UpdateGame.jsp";
		ServletContext ctx = getServletContext();
		
		//Attempt to get database connection, redirects to login page if no connection found
		getEntityManagerFactory(request, response);
		
		//If connection found, retrieve game data from DAO 
		if(emf != null){
			LeagueDAO ldao = new LeagueDAO(emf);
			Game game = new Game();
			int gameId = Integer.parseInt(request.getParameter("gameId"));
			
			try {
				game = ldao.getGame(gameId);		
			}
			
			catch (Exception e) {
				e.printStackTrace();
			}
			
			//Set attributes with information to be displayed on jsp
			request.setAttribute("game", game);
			ctx.getRequestDispatcher(url).forward(request, response);
		}		
	}

	/***
	 * doPost method for UpdateGameServlet
	 * Updates a game with the specified scores
	 * @param request
	 * @param response
	 * @throws ServletException
	 * @throws IOException
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {		
		//Attempt to get database connection, redirects to login page if no connection found
		getEntityManagerFactory(request, response);
		
		//If connection found, retrieve data from the form and update the game in the database
		if(emf != null){
			String url = "/UpcomingGame";
			LeagueDAO ldao = new LeagueDAO(emf);
			int gameId = Integer.parseInt(request.getParameter("gameId"));
			int homeScore = 0;
			int visitorScore = 0;
			String SO = "";
			String OT = "";
			if(request.getParameter("homeScore") != null && request.getParameter("visitorScore") != null)
			{
				if(request.getParameter("homeScore").equals("") && request.getParameter("visitorScore").equals("")
				{
					homeScore = Integer.parseInt(request.getParameter("homeScore"));
					visitorScore = Integer.parseInt(request.getParameter("visitorScore"));
					String SO_OT = request.getParameter("SO_OT");
					SO = "";
					OT = "";
					if(SO_OT == null) {SO_OT = "";}
					switch(SO_OT)
					{
						case "SO-Y":
							SO = "Y"; 
							OT = "Y"; 
							break;
						case "OT-Y":
							SO = "N"; 
							OT = "Y"; 
							break;
						default:
							SO = "N";
							OT = "N";
							break;
					}
				}
			}
			
			if(homeScore == visitorScore)
			{
				url = "/UpdateGame.jsp?error=true";				
			}
			else
			{
				try{
					ldao.updateGameScore(gameId, homeScore, visitorScore, SO, OT);
				}
				catch(Exception e)
				{
					e.printStackTrace();
				}
			}
			response.sendRedirect(response.encodeRedirectURL(request.getContextPath() + url));
		}
	}

}
